<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:citrus="http://www.citrusframework.org/schema/config"
       xmlns:citrus-ws="http://www.citrusframework.org/schema/ws/config"
       xmlns:citrus-http="http://www.citrusframework.org/schema/http/config"
       xmlns:citrus-ssh="http://www.citrusframework.org/schema/ssh/config"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:amq="http://activemq.apache.org/schema/core"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
       http://www.citrusframework.org/schema/config http://www.citrusframework.org/schema/config/citrus-config.xsd
       http://www.citrusframework.org/schema/ws/config http://www.citrusframework.org/schema/ws/config/citrus-ws-config.xsd
       http://www.citrusframework.org/schema/ssh/config http://www.citrusframework.org/schema/ssh/config/citrus-ssh-config.xsd
       http://www.citrusframework.org/schema/http/config http://www.citrusframework.org/schema/http/config/citrus-http-config.xsd
       http://activemq.apache.org/schema/core http://activemq.apache.org/schema/core/activemq-core.xsd">
	 
	<import resource="com/consol/citrus/demo/hello-demo-ctx.xml"/>
	
    <!-- Common settings -->
    <bean id="schemaRepository" class="com.consol.citrus.xml.XsdSchemaRepository">
        <property name="schemas">
            <list>
                <bean class="org.springframework.xml.xsd.SimpleXsdSchema">
                    <property name="xsd" value="classpath:com/consol/citrus/demo/sayHello.xsd"/>
                </bean>
            </list>
        </property>
    </bean>
    
    <bean id="helloSchema" class="org.springframework.xml.xsd.SimpleXsdSchema">
        <property name="xsd" value="classpath:com/consol/citrus/demo/sayHello.xsd"/>
    </bean>
    
    <bean id="helloSchemaRepository" class="com.consol.citrus.xml.XsdSchemaRepository">
        <property name="schemas">
            <list>
                <ref bean="helloSchema"/>
            </list>
        </property>
    </bean>
    
    <context:property-placeholder location="classpath:citrus.properties"/>

  <bean id="activeMQBroker" class="com.consol.citrus.server.activemq.ActiveMQServer">
    <property name="brokerURL" value="tcp://localhost:61616" />
    <property name="persistent" value="false"/>
    <property name="autoStart" value="true"/>
  </bean>

  <bean id="connectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory">
    <property name="brokerURL" value="tcp://localhost:61616" />
  </bean>

  <bean class="com.consol.citrus.variable.GlobalVariables">
        <property name="variables">
            <map>
                <entry key="project.name" value="Citrus Integration Testing"/>
            </map>
        </property>
    </bean>
    
    <bean class="com.consol.citrus.variable.GlobalVariablesPropertyLoader">
        <property name="propertyFiles">
            <list>
                <value>classpath:citrus-variable.properties</value>
            </list>
        </property>
    </bean>
    
    <!-- Test Actors -->
    <citrus:actor id="helloClient" 
                  name="HELLO_CLIENT" disabled="false"/>
    
    <citrus:actor id="helloServer" 
                  name="HELLO_SERVER" disabled="false"/>
                  
    <citrus:actor id="disabledActor" 
                  name="DISABLED_ACTOR" disabled="true"/>
    
    <!-- Listeners -->
    <bean class="com.consol.citrus.report.MessageTracingTestListener"/>
    
    <!-- Message validators -->
    <bean id="xmlMessageValidator" class="com.consol.citrus.validation.xml.DomXmlMessageValidator"/>
    <bean id="groovyXmlMessageValidator" class="com.consol.citrus.validation.script.GroovyXmlMessageValidator"/>
    <bean id="plainTextMessageValidator" class="com.consol.citrus.validation.text.PlainTextMessageValidator"/>
    <bean id="jsonTextMessageValidator" class="com.consol.citrus.validation.json.JsonTextMessageValidator"/>
    <bean id="groovyJsonMessageValidator" class="com.consol.citrus.validation.script.GroovyJsonMessageValidator"/>
    
    <bean id="replyMessageCorrelator" class="com.consol.citrus.message.DefaultReplyMessageCorrelator"/>
    
    <!-- Default namespace mappings used in XPath expression evaluations -->
    <bean id="namespaceContextBuilder" class="com.consol.citrus.xml.namespace.NamespaceContextBuilder">
        <property name="namespaceMappings">
            <props>
                <prop key="def">http://www.consol.de/schemas/samples/sayHello.xsd</prop>            
            </props>
        </property>
    </bean>
    
    <!-- SOAP WebService settings -->
    <citrus-ws:jetty-server id="jettyServer" port="8071"
                                             auto-start="true"
                                             root-parent-context="true"
                                             context-config-location="classpath:com/consol/citrus/ws/citrus-ws-servlet.xml"
                                             resource-base="src/citrus/resources"/>

    <bean id="messageFactory" class="org.springframework.ws.soap.saaj.SaajSoapMessageFactory"/>
    
    <bean id="soapAttachmentValidator" class="com.consol.citrus.ws.validation.SimpleSoapAttachmentValidator"/>
    
    <bean id="soapFaultValidator" class="com.consol.citrus.ws.validation.SimpleSoapFaultValidator"/>
                                                 
    <citrus-ws:message-sender id="webServiceRequestSender"
                              request-url="http://localhost:8071"
                              reply-handler="webServiceReplyHandler"
                              message-factory="messageFactory"
                              interceptors="clientInterceptors"/>
                              
    <citrus-ws:reply-message-handler id="webServiceReplyHandler"/>
    
    <citrus:jms-message-receiver id="webServiceRequestReceiver" destination-name="${jms.ws.stub.request}"/>
    
    <citrus:jms-message-sender id="webServiceResponseSender" destination-name="${jms.ws.stub.response}"/>
    
    <citrus-ws:message-sender id="webServiceHelloRequestSender"
                              request-url="http://localhost:8071/hello"
                              reply-handler="webServiceHelloReplyHandler"
                              message-factory="messageFactory"
                              interceptors="clientInterceptors"/>
                              
    <citrus-ws:message-sender id="webServiceFaultPropagatingHelloRequestSender"
                              request-url="http://localhost:8071/hello"
                              reply-handler="webServiceHelloReplyHandler"
                              message-factory="messageFactory"
                              interceptors="clientInterceptors"
                              fault-strategy="propagateError"/>
                              
    <citrus-ws:message-sender id="wsAddressingHelloRequestSender"
                              request-url="http://localhost:8071/hello"
                              reply-handler="webServiceHelloReplyHandler"
                              message-factory="messageFactory"
                              interceptors="clientInterceptors"
                              addressing-headers="wsAddressing200408"/>
    
    <bean id="wsAddressing200408" class="com.consol.citrus.ws.addressing.WsAddressingHeaders">
        <property name="version" value="VERSION200408"/>
        <property name="action" value="sayHello"/>
        <property name="to" value="urn:CitrusHelloServer"/>
        <property name="from">
            <bean class="org.springframework.ws.soap.addressing.core.EndpointReference">
                <constructor-arg value="urn:CitrusClient"/>
            </bean>
        </property>
        <property name="replyTo">
            <bean class="org.springframework.ws.soap.addressing.core.EndpointReference">
                <constructor-arg value="urn:CitrusClient"/>
            </bean>
        </property>
        <property name="faultTo">
            <bean class="org.springframework.ws.soap.addressing.core.EndpointReference">
                <constructor-arg value="urn:ClientFaultResolver"/>
            </bean>
        </property>
    </bean>
                                  
    <util:list id="clientInterceptors">
        <bean class="com.consol.citrus.ws.interceptor.LoggingClientInterceptor"/>
    </util:list>
    
    <citrus-ws:reply-message-handler id="webServiceHelloReplyHandler"/>
    
    <!-- HTTP settings -->
    <citrus-http:server id="httpServer" 
                        port="8072"
                        auto-start="true"
                        root-parent-context="true"
                        context-config-location="classpath:com/consol/citrus/http/citrus-http-servlet.xml"
                        resource-base="src/citrus/resources"/>

    <citrus-http:server id="httpStandaloneServer" 
                        port="8073"
                        auto-start="true"
                        context-config-location="classpath:com/consol/citrus/http/citrus-http-standalone-servlet.xml"
                        resource-base="src/citrus/resources"/>
                        
    <citrus-http:message-sender id="httpMessageSender" 
                                request-url="http://localhost:8072/test" 
                                request-method="POST"
                                content-type="text/xml"
                                reply-handler="httpResponseReceiver"
                                request-factory="basicAuthClientRequestFactory"
                                interceptors="httpClientInterceptors"
                                actor="helloClient"/>
    
    <util:list id="httpClientInterceptors">
        <bean class="com.consol.citrus.http.interceptor.LoggingClientInterceptor"/>
    </util:list>
  
    <bean id="basicAuthClientRequestFactory" class="com.consol.citrus.http.client.BasicAuthClientHttpRequestFactory">
      <property name="authScope">
          <bean class="org.apache.http.auth.AuthScope">
            <constructor-arg value="localhost"/>
            <constructor-arg value="8072"/>
            <constructor-arg value=""/>
            <constructor-arg value="basic"/>
          </bean>
      </property>
      <property name="credentials">
        <bean class="org.apache.http.auth.UsernamePasswordCredentials">
            <constructor-arg value="someUsername"/>
            <constructor-arg value="somePassword"/>
        </bean>      
      </property>  
    </bean>

  <citrus-http:message-sender id="httpMessageSenderStandalone"
                              request-url="http://localhost:8073/test"
                              request-method="POST"
                              content-type="text/xml"
                              reply-handler="httpResponseReceiver"
                              interceptors="httpClientInterceptors"/>

  <citrus-http:reply-message-handler id="httpResponseReceiver"/>

  <citrus:jms-message-receiver id="httpRequestReceiver" destination-name="${jms.queue.http.request.forward}"/>

    <citrus:jms-message-sender id="httpResponseSender" destination-name="${jms.queue.http.request.ack}" actor="helloServer"/>

  <!-- SSH setting -->
  <citrus-ssh:server id="sshServer"
                     allowed-key-path="classpath:com/consol/citrus/ssh/test_user_pub.pem"
                     user="roland"
                     port="9072"
                     auto-start="true"
                     message-handler-ref="sshMessageHandler"/>

  <bean id="sshMessageHandler" class="com.consol.citrus.adapter.handler.JmsConnectingMessageHandler">
    <property name="destinationName" value="${jms.queue.ssh.request.forward}"/>
    <property name="replyDestinationName" value="${jms.queue.ssh.request.ack}"/>
    <property name="connectionFactory" ref="connectionFactory"/>
    <property name="fallbackMessageHandlerDelegate">
      <bean class="com.consol.citrus.adapter.handler.EmptyResponseProducingMessageHandler"/>
    </property>
    <property name="replyTimeout" value="2000"/>
  </bean>

  <citrus-ssh:client id="sshClient"
                     port="9072"
                     user="roland"
                     private-key-path="classpath:com/consol/citrus/ssh/test_user.priv"
                     strict-host-checking="false"
                     host="localhost"
                     reply-handler="sshResponseReceiver" />

  <citrus-ssh:client id="sshClientWithWrongPrivateKey"
                     port="9072"
                     user="roland"
                     private-key-path="classpath:com/consol/citrus/ssh/wrong_user.priv"
                     private-key-password="consol"
                     strict-host-checking="false"
                     host="localhost"
                     reply-handler="sshResponseReceiver" />

  <citrus-ssh:client id="sshClientWithWrongUser"
                     port="9072"
                     user="blubber"
                     private-key-path="classpath:com/consol/citrus/ssh/test_user.priv"
                     strict-host-checking="false"
                     host="localhost"
                     reply-handler="sshResponseReceiver" />

  <citrus-ssh:reply-handler id="sshResponseReceiver"/>


  <citrus:jms-message-receiver id="sshRequestReceiver" destination-name="${jms.queue.ssh.request.forward}"/>
  <citrus:jms-message-sender id="sshResponseSender" destination-name="${jms.queue.ssh.request.ack}" />

  <!-- JDBC data sources -->
    <bean id="testDataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName">
            <value>${jdbc.driver}</value>
        </property>
        <property name="url">
            <value>${jdbc.url}</value>
        </property>
        <property name="username">
            <value>${db.user}</value>
        </property>
        <property name="password">
            <value>${db.password}</value>
        </property>
        <property name="initialSize">
            <value>1</value>
        </property>
        <property name="maxActive">
            <value>5</value>
        </property>
        <property name="maxIdle">
            <value>2</value>
        </property>
    </bean>
    
    <!-- JMS MessageSender/MessageReceiver -->
    <citrus:jms-message-sender id="helloRequestJmsMessageSender" destination-name="Citrus.Hello.Request.Queue"/>
  
    <citrus:jms-message-receiver id="helloResponseJmsMessageReceiver"
                                 receive-timeout="1000" 
                                 destination-name="Citrus.Hello.Response.Queue"/>
    
    <citrus:jms-sync-message-sender id="helloRequestJmsSyncMessageSender" 
                                    destination-name="Citrus.Hello.Sync.Request.Queue"
                                    reply-handler="helloResponseReplyMessageHandler"
                                    reply-timeout="1000"/>
    
    <citrus:jms-reply-message-handler id="helloResponseReplyMessageHandler"/>
                                      
    <!-- Message sender/receiver -->
    <citrus:jms-message-sender id="helloRequestSender" destination-name="${jms.queue.hello.request}"/>
  
    <citrus:jms-message-receiver id="helloResponseReceiver"
                                 receive-timeout="5000" 
                                 destination-name="${jms.queue.hello.response}"/>
                                 
    <citrus:jms-message-sender id="helloTopicRequestSender" 
                               destination-name="${jms.topic.hello.request}"
                               pub-sub-domain="true"/>
  
    <citrus:jms-message-receiver id="helloTopicRequestReceiver"
                                 receive-timeout="5000" 
                                 destination-name="${jms.topic.hello.request}"
                                 pub-sub-domain="true"/>
    
    <citrus:jms-sync-message-sender id="syncHelloTopicRequestSender" 
                                    destination-name="${jms.topic.hello.sync.request}"
                                    reply-handler="syncHelloResponseHandler"
                                    reply-timeout="1000"
                                    pub-sub-domain="true"/>
                                    
    <citrus:jms-sync-message-receiver id="syncHelloTopicRequestReceiver"
                                      receive-timeout="5000" 
                                      destination-name="${jms.topic.hello.sync.request}"
                                      reply-message-correlator="replyMessageCorrelator"
                                      pub-sub-domain="true"/>
  
    <citrus:jms-reply-message-sender id="syncHelloTopicReplySender"
                                     reply-destination-holder="syncHelloTopicRequestReceiver"
                                     reply-message-correlator="replyMessageCorrelator"/>                                    
                                    
    <citrus:jms-sync-message-sender id="syncHelloRequestSender" 
                                    destination-name="${jms.queue.hello.sync.request}"
                                    reply-handler="syncHelloResponseHandler"
                                    reply-timeout="1000"/>
    
    <citrus:jms-reply-message-handler id="syncHelloResponseHandler"/>
    
    <citrus:jms-sync-message-sender id="syncGetDateRequestSender" 
                                    destination-name="${jms.queue.date.sync.request}"
                                    reply-handler="syncGetDateResponseHandler"
                                    reply-message-correlator="replyMessageCorrelator"
                                    reply-timeout="1000"/>
    
    <citrus:jms-reply-message-handler id="syncGetDateResponseHandler"/>
    
    <citrus:jms-sync-message-receiver id="syncGetDateRequestReceiver"
                                      receive-timeout="5000" 
                                      destination-name="${jms.queue.date.sync.request}"
                                      reply-message-correlator="replyMessageCorrelator"/>
  
    <citrus:jms-reply-message-sender id="getDateRequestReplySender"
                                     reply-destination-holder="syncGetDateRequestReceiver"
                                     reply-message-correlator="replyMessageCorrelator"/>
    
    <citrus:jms-message-sender id="testMessageSender" destination-name="${jms.queue.test}"/>
  
    <citrus:jms-message-receiver id="testMessageReceiver" destination-name="${jms.queue.test}"/>
    
    <citrus:jms-message-receiver id="dummyMessageReceiver" destination-name="${jms.queue.test}"/>
    
    <citrus:message-channel-sender id="channelRequestSender" 
                                   channel="greetings"/>
    
    <citrus:message-channel-receiver id="channelResponseReceiver" 
                                     channel="greetings"
                                     receive-timeout="5000"/>
                                     
    <citrus:message-channel id="greetings" capacity="5"/>
    
    <!-- Utility beans -->
    <bean id="purgeJmsQueues" class="com.consol.citrus.actions.PurgeJmsQueuesAction">
        <property name="connectionFactory" ref="connectionFactory"/>
        <property name="queueNames">
            <list>
                <value>${jms.queue.http.request.forward}</value>
                <value>${jms.queue.http.request.ack}</value>
                <value>${jms.ws.stub.request}</value>
                <value>${jms.ws.stub.response}</value>
                <value>${jms.queue.test}</value>
                <value>${jms.queue.hello.request}</value>
                <value>${jms.queue.hello.response}</value>
                <value>${jms.queue.hello.sync.request}</value>
                <value>${jms.queue.date.sync.request}</value>
            </list>
        </property>
        <property name="queues">
            <list>
                <ref bean="testQueue1"/>
                <ref bean="testQueue2"/>
                <ref bean="testQueue3"/>
            </list>
        </property>
        <property name="receiveTimeout" value="10"/>
    </bean>
    
    <amq:queue id="testQueue1" physicalName="Citrus.TestQueue1"/>
    <amq:queue id="testQueue2" physicalName="Citrus.TestQueue2"/>
    <amq:queue id="testQueue3" physicalName="Citrus.TestQueue3"/>
    
    <bean class="com.consol.citrus.container.SequenceBeforeSuite">
        <property name="actions">
            <list>
                <bean id="initDatabase" class="com.consol.citrus.actions.ExecuteSQLAction">
                    <property name="dataSource" ref="testDataSource"/>
                    <property name="statements">
                        <list>
                            <value>CREATE TABLE ORDERS (ORDER_ID integer, REQUEST_TAG char(250), CONVERSATION_ID  char(250), CREATION_DATE  char(250), DESCRIPTION char(250)) </value>
                            <value>CREATE TABLE CUSTOMERS (CUSTOMER_ID integer, NAME char(250), DESCRIPTION char(250))</value>
                            <value>CREATE TABLE ERRORS (ERROR_ID integer, DESCRIPTION char(250))</value>
                        </list>
                    </property>
                </bean>
            </list>
        </property>
    </bean>
    
    <bean class="com.consol.citrus.container.SequenceBeforeTest">
        <property name="actions">
            <list>
                <ref bean="purgeJmsQueues"/>
            </list>
        </property>
    </bean>
    
    <bean class="com.consol.citrus.container.SequenceAfterSuite">
        <property name="actions">
            <list>
                <bean id="destroyDatabase" class="com.consol.citrus.actions.ExecuteSQLAction">
                    <property name="dataSource" ref="testDataSource"/>
                    <property name="ignoreErrors" value="true"/>
                    <property name="statements">
                        <list>
                            <value>DROP TABLE ORDERS</value>
                            <value>DROP TABLE CUSTOMERS</value>
                            <value>DROP TABLE ERRORS</value>
                        </list>
                    </property>
                </bean>
            </list>
        </property>
    </bean>
    
</beans>
